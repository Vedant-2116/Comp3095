# Spring Application Name
spring.application.name=post

# Server Configuration
server.port=8083

spring.datasource.url=jdbc:postgresql://host.docker.internal:5434/post
spring.datasource.username=admin
spring.datasource.password=password

spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# User Service URL
user.service.url=http://user:8084/api/user

# Comment Service URL
comment.service.url=http://comment:8082/api/comment

#none, validate, update, create, create-drop
spring.jpa.hibernate.ddl-auto=update

# Eureka Client Configuration
eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Actuator for health checks and metrics
management.endpoints.web.exposure.include=*
management.health.circuitbreakers.enabled=true
management.endpoint.health.show-details=always


# Resilience4j
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true

# determines how many events can be stored
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10

# Specifies that the 'Inventory' circuit breaker uses a count-based sliding windows
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
# sets the failure rate threshold to 50%
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50

# sets the wait duration threshold to 5 seconds
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s

# sets the permitted number of calls in half open state to 2
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=2

# enable automatic transition from OPEN to HALF_OPEN state once the wait duration has passed
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

# Zipkin
management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
management.tracing.sampling.probability=1.0
logging.pattern.level=%5p [${spring.application.name:}, %X{traceId:-},%X{spanId:-}]






